/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ridwan.Frm;

import TableModelHeadercheckBox.TableHeaderCheckBox;
import com.ridwan.DAO.ETDao;
import com.ridwan.DBC.DBC;
import com.ridwan.Dialog.DialogAddPerangkat;
import com.ridwan.Dialog.DialogEditPerangkat;
import com.ridwan.Model.ETModel;
import com.ridwan.TableModel.TableModelET;
import com.ridwan.TableModel.TableModelUser;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ciwong
 */
public class PerangkatFrm extends javax.swing.JInternalFrame implements DocumentListener{
private TableModelET  tableModelET = new TableModelET();
private ETDao eTDao = new ETDao();
private TableRowSorter rowSorter = new TableRowSorter();
private Connection c;

    
    /**
     * Creates new form PerangkatFrm
     */
    public PerangkatFrm() {
        initComponents();
        setTitle("Data Perangkat");
        tabel_perangkat.setModel(tableModelET);
        loadData();
    setClosable(true);
      setIconifiable(true);
        tabel_perangkat.setModel(tableModelET);
        // tabel_perangkat.getColumnModel().getColumn(4).setHeaderRenderer(new TableHeaderCheckBox(tabel_perangkat.getTableHeader(), 4));
        loadData();
        
        rowSorter = new TableRowSorter(tabel_perangkat.getModel());
        tabel_perangkat.setRowSorter(rowSorter);
        txt_cari.getDocument().addDocumentListener(this);
               
        
        final int rows = 11;
        JButton previous = new JButton("<<");
        previous.addActionListener( new ActionListener(){
                    public void actionPerformed(ActionEvent ae) {
                        int height = tabel_perangkat.getRowHeight()*(rows-1);
                        JScrollBar bar = jScrollPane1.getVerticalScrollBar();
                        bar.setValue( bar.getValue()-height );
                    }
                } );
        
        
                JButton next = new JButton(">>");
                next.addActionListener( new ActionListener(){
                    public void actionPerformed(ActionEvent ae) {
                        int height = tabel_perangkat.getRowHeight()*(rows-1);
                        JScrollBar bar = jScrollPane1.getVerticalScrollBar();
                        bar.setValue( bar.getValue()+height );
                    }
                } );  
      
        panelnext.add(next);
        panelprevious.add(previous);
                
      
        
        c= DBC.getConnection();
    }
    
    
    
    
    
    private void loadData(){
    List<ETModel> etModels = eTDao.getETModels();
    tableModelET.setData(etModels);
    }
    
    
     
    private void saring(){
        String text = txt_cari.getText();
        if (text.length()==0){
            rowSorter.setRowFilter(null);
        }else {
           rowSorter.setRowFilter(RowFilter.regexFilter
        (Pattern.compile("(?i).*" + text + ".*", Pattern.CASE_INSENSITIVE|Pattern.DOTALL ).toString()));
        }
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabel_perangkat = new javax.swing.JTable();
        panelbutton = new javax.swing.JPanel();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_cari = new javax.swing.JTextField();
        panelprevious = new javax.swing.JPanel();
        panelnext = new javax.swing.JPanel();

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);

        tabel_perangkat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabel_perangkat);

        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ridwan/ICON/Add_24x24.png"))); // NOI18N
        btnTambah.setText("Tambah Data");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        panelbutton.add(btnTambah);

        btnUbah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ridwan/ICON/Edit_24x24.png"))); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });
        panelbutton.add(btnUbah);

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ridwan/ICON/Remove_24x24.png"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        panelbutton.add(btnHapus);

        jLabel1.setText("Cari :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelprevious, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelnext, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelprevious, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelbutton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelnext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
List<ETModel> Ceket = tableModelET.getETcek();
if (!Ceket.isEmpty()){
   if (JOptionPane.showConfirmDialog(null, "Konfirmasi", "Apakah Anda Ingin Menghapus Data Ini ?", JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION){
    boolean valid = true;
    for (ETModel eTModel : Ceket){
        if (valid){
            eTDao.deleteET(eTModel);
        }
        loadData();
    }
    JOptionPane.showMessageDialog(null, "Data Berhasil Dihapus");
}
}else {
    JOptionPane.showMessageDialog(null, "Seleksi Salah Satu Baris");
}

// TODO add your handling code here:
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
DialogAddPerangkat addPerangkat = new DialogAddPerangkat();
ETModel etm = addPerangkat.insertUser();
if (eTDao.insertET(etm)==true){
    JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan");
    loadData();
}else {
    JOptionPane.showMessageDialog(null,"Data Gagal Disimpan");
loadData();
}
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
int index = tabel_perangkat.getSelectedRow();
if (index!=-1){
    ETModel et = tableModelET.getET(tabel_perangkat.convertRowIndexToModel(index));
    DialogEditPerangkat d = new DialogEditPerangkat();
    ETModel em = d.updateUser(et);
    if (em!=null){
        eTDao.updateET(em);
        tableModelET.updateET(index, em);
        loadData();
    }
    
}else {
        JOptionPane.showMessageDialog(null, "Seleksi Salah Satu Baris");
    }
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnUbahActionPerformed

    List<ETModel> list = new ArrayList();

    
 
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelbutton;
    private javax.swing.JPanel panelnext;
    private javax.swing.JPanel panelprevious;
    private javax.swing.JTable tabel_perangkat;
    private javax.swing.JTextField txt_cari;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent e) {
        saring();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        saring();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
       
    saring();}
}
